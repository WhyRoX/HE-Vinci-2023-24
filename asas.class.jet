{"diagram":"ClassDiagram","nodes":[{"methods":"+ Accessoire(reference: String, intitule : String, \nprix : double, couleur : String, chargeMax : double)\n+ Accessoire(reference: String, intitule : String, \nprix : double, chargeMax : double)  ","name":"Accessoire","x":840,"y":370,"attributes":"- chargeMax : double\n+ COULEUR_PAR_DEF : String = \"blanc\"\n--------------------------------------------","id":0,"type":"ClassNode"},{"methods":"+ Composant(reference: String, intitule : String, \nprix : double, couleur : String)\n+ setPrix(prix : double) : void\n+equals(obj : Object) : boolean\n+hashCode() : int","name":"Composant\n<< abstract>>","x":410,"y":160,"attributes":"- reference: String\n- intitule : String\n- prix : double\n- couleur : String\n- COULEUR_POSSIBLE : String[] = {\"blanc\", \"noir\", \"gris\"'} \n---------------------------------------------------------------\n","id":1,"type":"ClassNode"},{"methods":"+ Position(posX : double, posY : double)","name":"Position","x":60,"y":150,"attributes":"- posX : double\n- posY : double","id":2,"type":"ClassNode"},{"methods":"+ ComposantPositionne(position : Position, \ncomposant : Composant)","name":"ComposantPositionne","x":50,"y":310,"attributes":"- position : Position\n- composant : Composant","id":3,"type":"ClassNode"},{"methods":"+ Cadre(reference: String, intitule : String, \nprix : double, couleur : String, \nlargeur : double, profondeur : double, hauteur : double)","name":"Cadre","x":840,"y":150,"attributes":"+ INTITULE_CADRE : String = \"cadre\"\n------------------------------------------\n- largeur : double\n- profondeur : double\n- hauteur : double","id":4,"type":"ClassNode"},{"methods":"+ ajouterDressing(dressing : Dressing) : boolean\n+ supprimerDressing(dressing : Dressing) : boolean\n+ validerCommande() : boolean\n+ calculerPrixTotal() : double","name":"Commande","x":520,"y":570,"attributes":"- dateDeCommande : LocalDate\n- dressings : ArrayList<Dressing>\n- commandeValidee : boolean\n","id":5,"type":"ClassNode"},{"methods":"+ ajouterComposant(composant : Composant, pos : Position) : boolean\n+ retirerComposant( \"\"\" ) : boolean\n+ calculerPrix() : double\n+ commandePassee() : boolean","name":"Dressing","x":10,"y":560,"attributes":"- numeroDuivant : int\n--------------------------\n- numero : int\n- prix : double\n- listeComposants : ArrayList<ComposantPositionnee>","id":6,"type":"ClassNode"},{"methods":"+ Client(nom : String, prenom : String, adresseMail : String)\n+ nvlCommande() : boolean\n+ validerCommander() : boolean\n+ iterator() : Iterator<Commande>","name":"Client","x":890,"y":750,"attributes":"- nom : String\n- prenom : String\n- adresseMail : String\n- commandesPassee : ArrayList<Commande>\n- commandeEnCours : Commande","id":7,"type":"ClassNode"},{"name":"Iterable<Commande>","x":1030,"y":620,"id":8,"type":"NoteNode"}],"edges":[{"Generalization Type":"Inheritance","start":4,"end":1,"type":"GeneralizationEdge"},{"Generalization Type":"Inheritance","start":0,"end":1,"type":"GeneralizationEdge"},{"startLabel":"","middleLabel":"","start":3,"directionality":"Unidirectional","end":2,"endLabel":"","type":"AssociationEdge"},{"startLabel":"","middleLabel":"","start":1,"directionality":"Unidirectional","end":3,"endLabel":"","type":"AssociationEdge"},{"startLabel":"","middleLabel":"","start":6,"directionality":"Unidirectional","end":3,"endLabel":"*","type":"AssociationEdge"},{"startLabel":"","middleLabel":"","start":5,"directionality":"Unidirectional","end":6,"endLabel":"*","type":"AssociationEdge"},{"startLabel":"","middleLabel":"","start":8,"end":7,"endLabel":"","type":"AggregationEdge","Aggregation Type":"Aggregation"},{"startLabel":"","middleLabel":"","start":7,"directionality":"Unidirectional","end":5,"endLabel":"*","type":"AssociationEdge"}],"version":"3.6"}
